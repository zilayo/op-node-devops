services:
  op-reth:
    build: .
    volumes:
      - chain_data:/chain_data
    ports:
      - 127.0.0.1:9545:9545 # http rpc
      - 127.0.0.1:9546:9546 # ws rpc
      - 30305:30305/tcp # p2p
      - 30305:30305/udp # p2p
      - 9004:9004/tcp # discv5
      - 9004:9004/udp # discv5
      - 127.0.0.1:5060:5060 # metrics
    networks:
      - blockchain_node
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: unless-stopped
    stop_grace_period: 5m
    command: ['bash', './reth-entrypoint.sh']
    env_file:
      - .env
    healthcheck:
      start_interval: 5s
      start_period: 240s
      test:
        [
          'CMD',
          'curl',
          '-s',
          '-X',
          'POST',
          '-H',
          'Content-Type: application/json',
          '--data',
          '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}',
          'http://localhost:9545',
        ]

  op-node:
    build: .
    volumes:
      - chain_data:/chain_data
    ports:
      - '9005:9005/tcp' # p2p
      - '9005:9005/udp' # p2p
      - 127.0.0.1:5065:5065 # metrics
      - 127.0.0.1:9550:9550 # RPC port
    depends_on:
      op-reth:
        condition: 'service_healthy'
    networks:
      - blockchain_node
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: unless-stopped
    stop_grace_period: 5m
    command: ['bash', './op-node-entrypoint.sh']
    env_file:
      - .env

networks:
  blockchain_node:
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.0.1

volumes:
  chain_data:
